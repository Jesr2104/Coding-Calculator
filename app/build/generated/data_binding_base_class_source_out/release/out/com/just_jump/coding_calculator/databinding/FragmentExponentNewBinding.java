// Generated by view binder compiler. Do not edit!
package com.just_jump.coding_calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.just_jump.coding_calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExponentNewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView Title;

  @NonNull
  public final TextView baseValue;

  @NonNull
  public final MaterialButton buttonBack;

  @NonNull
  public final MaterialButton calculatorButton;

  @NonNull
  public final TextView exponentValue;

  @NonNull
  public final TextInputEditText fieldBase;

  @NonNull
  public final TextInputLayout fieldBaseLayout;

  @NonNull
  public final TextInputEditText fieldExponent;

  @NonNull
  public final TextInputLayout fieldExponentLayout;

  @NonNull
  public final TextView labelResult;

  @NonNull
  public final ConstraintLayout layoutBlock1;

  @NonNull
  public final ConstraintLayout layoutBlock2;

  @NonNull
  public final TextView resultField;

  @NonNull
  public final View separator;

  @NonNull
  public final TextView textTitle2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  private FragmentExponentNewBinding(@NonNull FrameLayout rootView, @NonNull TextView Title,
      @NonNull TextView baseValue, @NonNull MaterialButton buttonBack,
      @NonNull MaterialButton calculatorButton, @NonNull TextView exponentValue,
      @NonNull TextInputEditText fieldBase, @NonNull TextInputLayout fieldBaseLayout,
      @NonNull TextInputEditText fieldExponent, @NonNull TextInputLayout fieldExponentLayout,
      @NonNull TextView labelResult, @NonNull ConstraintLayout layoutBlock1,
      @NonNull ConstraintLayout layoutBlock2, @NonNull TextView resultField,
      @NonNull View separator, @NonNull TextView textTitle2, @NonNull TextView textView3,
      @NonNull TextView textView4) {
    this.rootView = rootView;
    this.Title = Title;
    this.baseValue = baseValue;
    this.buttonBack = buttonBack;
    this.calculatorButton = calculatorButton;
    this.exponentValue = exponentValue;
    this.fieldBase = fieldBase;
    this.fieldBaseLayout = fieldBaseLayout;
    this.fieldExponent = fieldExponent;
    this.fieldExponentLayout = fieldExponentLayout;
    this.labelResult = labelResult;
    this.layoutBlock1 = layoutBlock1;
    this.layoutBlock2 = layoutBlock2;
    this.resultField = resultField;
    this.separator = separator;
    this.textTitle2 = textTitle2;
    this.textView3 = textView3;
    this.textView4 = textView4;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExponentNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExponentNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_exponent_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExponentNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Title;
      TextView Title = rootView.findViewById(id);
      if (Title == null) {
        break missingId;
      }

      id = R.id.base_value;
      TextView baseValue = rootView.findViewById(id);
      if (baseValue == null) {
        break missingId;
      }

      id = R.id.button_back;
      MaterialButton buttonBack = rootView.findViewById(id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.calculatorButton;
      MaterialButton calculatorButton = rootView.findViewById(id);
      if (calculatorButton == null) {
        break missingId;
      }

      id = R.id.exponent_value;
      TextView exponentValue = rootView.findViewById(id);
      if (exponentValue == null) {
        break missingId;
      }

      id = R.id.field_base;
      TextInputEditText fieldBase = rootView.findViewById(id);
      if (fieldBase == null) {
        break missingId;
      }

      id = R.id.field_base_layout;
      TextInputLayout fieldBaseLayout = rootView.findViewById(id);
      if (fieldBaseLayout == null) {
        break missingId;
      }

      id = R.id.field_exponent;
      TextInputEditText fieldExponent = rootView.findViewById(id);
      if (fieldExponent == null) {
        break missingId;
      }

      id = R.id.field_exponent_layout;
      TextInputLayout fieldExponentLayout = rootView.findViewById(id);
      if (fieldExponentLayout == null) {
        break missingId;
      }

      id = R.id.label_result;
      TextView labelResult = rootView.findViewById(id);
      if (labelResult == null) {
        break missingId;
      }

      id = R.id.layoutBlock1;
      ConstraintLayout layoutBlock1 = rootView.findViewById(id);
      if (layoutBlock1 == null) {
        break missingId;
      }

      id = R.id.layoutBlock2;
      ConstraintLayout layoutBlock2 = rootView.findViewById(id);
      if (layoutBlock2 == null) {
        break missingId;
      }

      id = R.id.resultField;
      TextView resultField = rootView.findViewById(id);
      if (resultField == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = rootView.findViewById(id);
      if (separator == null) {
        break missingId;
      }

      id = R.id.textTitle2;
      TextView textTitle2 = rootView.findViewById(id);
      if (textTitle2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      return new FragmentExponentNewBinding((FrameLayout) rootView, Title, baseValue, buttonBack,
          calculatorButton, exponentValue, fieldBase, fieldBaseLayout, fieldExponent,
          fieldExponentLayout, labelResult, layoutBlock1, layoutBlock2, resultField, separator,
          textTitle2, textView3, textView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

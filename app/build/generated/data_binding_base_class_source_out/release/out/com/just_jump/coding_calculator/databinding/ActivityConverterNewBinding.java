// Generated by view binder compiler. Do not edit!
package com.just_jump.coding_calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.just_jump.coding_calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConverterNewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ButtonArea;

  @NonNull
  public final ImageView ButtonData;

  @NonNull
  public final ImageView ButtonLength;

  @NonNull
  public final ImageView ButtonSpeed;

  @NonNull
  public final ImageView ButtonTemp;

  @NonNull
  public final ImageView ButtonTime;

  @NonNull
  public final ImageView ButtonVolume;

  @NonNull
  public final ImageView ButtonWeight;

  @NonNull
  public final Spinner SpinnerMenuA;

  @NonNull
  public final Spinner SpinnerMenuB;

  @NonNull
  public final TextView Title;

  @NonNull
  public final TextView TitleTypeConvert;

  @NonNull
  public final MaterialButton buttonBack;

  @NonNull
  public final MaterialCardView cardArea;

  @NonNull
  public final MaterialCardView cardData;

  @NonNull
  public final MaterialCardView cardLength;

  @NonNull
  public final MaterialCardView cardSpeed;

  @NonNull
  public final MaterialCardView cardTemp;

  @NonNull
  public final MaterialCardView cardTime;

  @NonNull
  public final MaterialCardView cardVolume;

  @NonNull
  public final MaterialCardView cardWeight;

  @NonNull
  public final TextInputEditText dataA;

  @NonNull
  public final TextInputEditText dataB;

  @NonNull
  public final ConstraintLayout layoutBlock1;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextView textArea;

  @NonNull
  public final TextView textData;

  @NonNull
  public final TextInputLayout textInputLayoutA;

  @NonNull
  public final TextInputLayout textInputLayoutB;

  @NonNull
  public final TextView textLength;

  @NonNull
  public final TextView textSpeed;

  @NonNull
  public final TextView textTemp;

  @NonNull
  public final TextView textTime;

  @NonNull
  public final TextView textVolume;

  @NonNull
  public final TextView textWeight;

  private ActivityConverterNewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ButtonArea, @NonNull ImageView ButtonData, @NonNull ImageView ButtonLength,
      @NonNull ImageView ButtonSpeed, @NonNull ImageView ButtonTemp, @NonNull ImageView ButtonTime,
      @NonNull ImageView ButtonVolume, @NonNull ImageView ButtonWeight,
      @NonNull Spinner SpinnerMenuA, @NonNull Spinner SpinnerMenuB, @NonNull TextView Title,
      @NonNull TextView TitleTypeConvert, @NonNull MaterialButton buttonBack,
      @NonNull MaterialCardView cardArea, @NonNull MaterialCardView cardData,
      @NonNull MaterialCardView cardLength, @NonNull MaterialCardView cardSpeed,
      @NonNull MaterialCardView cardTemp, @NonNull MaterialCardView cardTime,
      @NonNull MaterialCardView cardVolume, @NonNull MaterialCardView cardWeight,
      @NonNull TextInputEditText dataA, @NonNull TextInputEditText dataB,
      @NonNull ConstraintLayout layoutBlock1, @NonNull LinearLayout linearLayout2,
      @NonNull TextView textArea, @NonNull TextView textData,
      @NonNull TextInputLayout textInputLayoutA, @NonNull TextInputLayout textInputLayoutB,
      @NonNull TextView textLength, @NonNull TextView textSpeed, @NonNull TextView textTemp,
      @NonNull TextView textTime, @NonNull TextView textVolume, @NonNull TextView textWeight) {
    this.rootView = rootView;
    this.ButtonArea = ButtonArea;
    this.ButtonData = ButtonData;
    this.ButtonLength = ButtonLength;
    this.ButtonSpeed = ButtonSpeed;
    this.ButtonTemp = ButtonTemp;
    this.ButtonTime = ButtonTime;
    this.ButtonVolume = ButtonVolume;
    this.ButtonWeight = ButtonWeight;
    this.SpinnerMenuA = SpinnerMenuA;
    this.SpinnerMenuB = SpinnerMenuB;
    this.Title = Title;
    this.TitleTypeConvert = TitleTypeConvert;
    this.buttonBack = buttonBack;
    this.cardArea = cardArea;
    this.cardData = cardData;
    this.cardLength = cardLength;
    this.cardSpeed = cardSpeed;
    this.cardTemp = cardTemp;
    this.cardTime = cardTime;
    this.cardVolume = cardVolume;
    this.cardWeight = cardWeight;
    this.dataA = dataA;
    this.dataB = dataB;
    this.layoutBlock1 = layoutBlock1;
    this.linearLayout2 = linearLayout2;
    this.textArea = textArea;
    this.textData = textData;
    this.textInputLayoutA = textInputLayoutA;
    this.textInputLayoutB = textInputLayoutB;
    this.textLength = textLength;
    this.textSpeed = textSpeed;
    this.textTemp = textTemp;
    this.textTime = textTime;
    this.textVolume = textVolume;
    this.textWeight = textWeight;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConverterNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConverterNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_converter_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConverterNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Button_Area;
      ImageView ButtonArea = rootView.findViewById(id);
      if (ButtonArea == null) {
        break missingId;
      }

      id = R.id.Button_Data;
      ImageView ButtonData = rootView.findViewById(id);
      if (ButtonData == null) {
        break missingId;
      }

      id = R.id.Button_Length;
      ImageView ButtonLength = rootView.findViewById(id);
      if (ButtonLength == null) {
        break missingId;
      }

      id = R.id.Button_Speed;
      ImageView ButtonSpeed = rootView.findViewById(id);
      if (ButtonSpeed == null) {
        break missingId;
      }

      id = R.id.Button_Temp;
      ImageView ButtonTemp = rootView.findViewById(id);
      if (ButtonTemp == null) {
        break missingId;
      }

      id = R.id.Button_Time;
      ImageView ButtonTime = rootView.findViewById(id);
      if (ButtonTime == null) {
        break missingId;
      }

      id = R.id.Button_Volume;
      ImageView ButtonVolume = rootView.findViewById(id);
      if (ButtonVolume == null) {
        break missingId;
      }

      id = R.id.Button_Weight;
      ImageView ButtonWeight = rootView.findViewById(id);
      if (ButtonWeight == null) {
        break missingId;
      }

      id = R.id.SpinnerMenuA;
      Spinner SpinnerMenuA = rootView.findViewById(id);
      if (SpinnerMenuA == null) {
        break missingId;
      }

      id = R.id.SpinnerMenuB;
      Spinner SpinnerMenuB = rootView.findViewById(id);
      if (SpinnerMenuB == null) {
        break missingId;
      }

      id = R.id.Title;
      TextView Title = rootView.findViewById(id);
      if (Title == null) {
        break missingId;
      }

      id = R.id.Title_TypeConvert;
      TextView TitleTypeConvert = rootView.findViewById(id);
      if (TitleTypeConvert == null) {
        break missingId;
      }

      id = R.id.button_back;
      MaterialButton buttonBack = rootView.findViewById(id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.card_Area;
      MaterialCardView cardArea = rootView.findViewById(id);
      if (cardArea == null) {
        break missingId;
      }

      id = R.id.card_Data;
      MaterialCardView cardData = rootView.findViewById(id);
      if (cardData == null) {
        break missingId;
      }

      id = R.id.card_Length;
      MaterialCardView cardLength = rootView.findViewById(id);
      if (cardLength == null) {
        break missingId;
      }

      id = R.id.card_Speed;
      MaterialCardView cardSpeed = rootView.findViewById(id);
      if (cardSpeed == null) {
        break missingId;
      }

      id = R.id.card_Temp;
      MaterialCardView cardTemp = rootView.findViewById(id);
      if (cardTemp == null) {
        break missingId;
      }

      id = R.id.card_Time;
      MaterialCardView cardTime = rootView.findViewById(id);
      if (cardTime == null) {
        break missingId;
      }

      id = R.id.card_Volume;
      MaterialCardView cardVolume = rootView.findViewById(id);
      if (cardVolume == null) {
        break missingId;
      }

      id = R.id.card_Weight;
      MaterialCardView cardWeight = rootView.findViewById(id);
      if (cardWeight == null) {
        break missingId;
      }

      id = R.id.dataA;
      TextInputEditText dataA = rootView.findViewById(id);
      if (dataA == null) {
        break missingId;
      }

      id = R.id.dataB;
      TextInputEditText dataB = rootView.findViewById(id);
      if (dataB == null) {
        break missingId;
      }

      id = R.id.layoutBlock1;
      ConstraintLayout layoutBlock1 = rootView.findViewById(id);
      if (layoutBlock1 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = rootView.findViewById(id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.textArea;
      TextView textArea = rootView.findViewById(id);
      if (textArea == null) {
        break missingId;
      }

      id = R.id.textData;
      TextView textData = rootView.findViewById(id);
      if (textData == null) {
        break missingId;
      }

      id = R.id.textInputLayoutA;
      TextInputLayout textInputLayoutA = rootView.findViewById(id);
      if (textInputLayoutA == null) {
        break missingId;
      }

      id = R.id.textInputLayoutB;
      TextInputLayout textInputLayoutB = rootView.findViewById(id);
      if (textInputLayoutB == null) {
        break missingId;
      }

      id = R.id.textLength;
      TextView textLength = rootView.findViewById(id);
      if (textLength == null) {
        break missingId;
      }

      id = R.id.textSpeed;
      TextView textSpeed = rootView.findViewById(id);
      if (textSpeed == null) {
        break missingId;
      }

      id = R.id.textTemp;
      TextView textTemp = rootView.findViewById(id);
      if (textTemp == null) {
        break missingId;
      }

      id = R.id.textTime;
      TextView textTime = rootView.findViewById(id);
      if (textTime == null) {
        break missingId;
      }

      id = R.id.textVolume;
      TextView textVolume = rootView.findViewById(id);
      if (textVolume == null) {
        break missingId;
      }

      id = R.id.textWeight;
      TextView textWeight = rootView.findViewById(id);
      if (textWeight == null) {
        break missingId;
      }

      return new ActivityConverterNewBinding((ConstraintLayout) rootView, ButtonArea, ButtonData,
          ButtonLength, ButtonSpeed, ButtonTemp, ButtonTime, ButtonVolume, ButtonWeight,
          SpinnerMenuA, SpinnerMenuB, Title, TitleTypeConvert, buttonBack, cardArea, cardData,
          cardLength, cardSpeed, cardTemp, cardTime, cardVolume, cardWeight, dataA, dataB,
          layoutBlock1, linearLayout2, textArea, textData, textInputLayoutA, textInputLayoutB,
          textLength, textSpeed, textTemp, textTime, textVolume, textWeight);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

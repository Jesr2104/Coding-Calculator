// Generated by view binder compiler. Do not edit!
package com.just_jump.coding_calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.just_jump.coding_calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAverageNewBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final MaterialButton InsertNewValue;

  @NonNull
  public final TextView Title;

  @NonNull
  public final MaterialButton buttonBack;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final MaterialButton clearButton;

  @NonNull
  public final TextView labelNValues;

  @NonNull
  public final TextView labelResult;

  @NonNull
  public final TextView labelTotal;

  @NonNull
  public final ConstraintLayout layoutBlock1;

  @NonNull
  public final ConstraintLayout layoutBlock2;

  @NonNull
  public final ScrollView linearLayout;

  @NonNull
  public final TextInputEditText newValue;

  @NonNull
  public final TextInputLayout newValueLayout;

  @NonNull
  public final TextView numValues;

  @NonNull
  public final TextView resultField;

  @NonNull
  public final View separator;

  @NonNull
  public final TextView textTitle2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView totalValueAdd;

  private FragmentAverageNewBinding(@NonNull FrameLayout rootView,
      @NonNull MaterialButton InsertNewValue, @NonNull TextView Title,
      @NonNull MaterialButton buttonBack, @NonNull ChipGroup chipGroup,
      @NonNull MaterialButton clearButton, @NonNull TextView labelNValues,
      @NonNull TextView labelResult, @NonNull TextView labelTotal,
      @NonNull ConstraintLayout layoutBlock1, @NonNull ConstraintLayout layoutBlock2,
      @NonNull ScrollView linearLayout, @NonNull TextInputEditText newValue,
      @NonNull TextInputLayout newValueLayout, @NonNull TextView numValues,
      @NonNull TextView resultField, @NonNull View separator, @NonNull TextView textTitle2,
      @NonNull TextView textView3, @NonNull TextView totalValueAdd) {
    this.rootView = rootView;
    this.InsertNewValue = InsertNewValue;
    this.Title = Title;
    this.buttonBack = buttonBack;
    this.chipGroup = chipGroup;
    this.clearButton = clearButton;
    this.labelNValues = labelNValues;
    this.labelResult = labelResult;
    this.labelTotal = labelTotal;
    this.layoutBlock1 = layoutBlock1;
    this.layoutBlock2 = layoutBlock2;
    this.linearLayout = linearLayout;
    this.newValue = newValue;
    this.newValueLayout = newValueLayout;
    this.numValues = numValues;
    this.resultField = resultField;
    this.separator = separator;
    this.textTitle2 = textTitle2;
    this.textView3 = textView3;
    this.totalValueAdd = totalValueAdd;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAverageNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAverageNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment__average_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAverageNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.InsertNewValue;
      MaterialButton InsertNewValue = rootView.findViewById(id);
      if (InsertNewValue == null) {
        break missingId;
      }

      id = R.id.Title;
      TextView Title = rootView.findViewById(id);
      if (Title == null) {
        break missingId;
      }

      id = R.id.button_back;
      MaterialButton buttonBack = rootView.findViewById(id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = rootView.findViewById(id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.clear_button;
      MaterialButton clearButton = rootView.findViewById(id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.label_nValues;
      TextView labelNValues = rootView.findViewById(id);
      if (labelNValues == null) {
        break missingId;
      }

      id = R.id.label_result;
      TextView labelResult = rootView.findViewById(id);
      if (labelResult == null) {
        break missingId;
      }

      id = R.id.label_Total;
      TextView labelTotal = rootView.findViewById(id);
      if (labelTotal == null) {
        break missingId;
      }

      id = R.id.layoutBlock1;
      ConstraintLayout layoutBlock1 = rootView.findViewById(id);
      if (layoutBlock1 == null) {
        break missingId;
      }

      id = R.id.layoutBlock2;
      ConstraintLayout layoutBlock2 = rootView.findViewById(id);
      if (layoutBlock2 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ScrollView linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.new_value;
      TextInputEditText newValue = rootView.findViewById(id);
      if (newValue == null) {
        break missingId;
      }

      id = R.id.new_value_layout;
      TextInputLayout newValueLayout = rootView.findViewById(id);
      if (newValueLayout == null) {
        break missingId;
      }

      id = R.id.num_values;
      TextView numValues = rootView.findViewById(id);
      if (numValues == null) {
        break missingId;
      }

      id = R.id.resultField;
      TextView resultField = rootView.findViewById(id);
      if (resultField == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = rootView.findViewById(id);
      if (separator == null) {
        break missingId;
      }

      id = R.id.textTitle2;
      TextView textTitle2 = rootView.findViewById(id);
      if (textTitle2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.total_value_add;
      TextView totalValueAdd = rootView.findViewById(id);
      if (totalValueAdd == null) {
        break missingId;
      }

      return new FragmentAverageNewBinding((FrameLayout) rootView, InsertNewValue, Title,
          buttonBack, chipGroup, clearButton, labelNValues, labelResult, labelTotal, layoutBlock1,
          layoutBlock2, linearLayout, newValue, newValueLayout, numValues, resultField, separator,
          textTitle2, textView3, totalValueAdd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

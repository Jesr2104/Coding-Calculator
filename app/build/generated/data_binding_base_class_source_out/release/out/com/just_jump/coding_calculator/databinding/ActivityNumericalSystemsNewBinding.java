// Generated by view binder compiler. Do not edit!
package com.just_jump.coding_calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.just_jump.coding_calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNumericalSystemsNewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Title;

  @NonNull
  public final TextView Title2;

  @NonNull
  public final MaterialButton buttonBack;

  @NonNull
  public final TextInputEditText fieldNumber;

  @NonNull
  public final TextInputLayout fieldNumberLayout;

  @NonNull
  public final ConstraintLayout layoutBlock15;

  @NonNull
  public final ConstraintLayout layoutBlock2;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RadioButton rbBinary;

  @NonNull
  public final RadioButton rbDecimal;

  @NonNull
  public final RadioButton rbHexadecimal;

  @NonNull
  public final RadioButton rbOctal;

  @NonNull
  public final TextView resultBinary;

  @NonNull
  public final TextView resultDecimal;

  @NonNull
  public final TextView resultHex;

  @NonNull
  public final TextView resultOctal;

  @NonNull
  public final TextView textTitle2;

  @NonNull
  public final TextView titleBinary;

  @NonNull
  public final TextView titleDecimal;

  @NonNull
  public final TextView titleHex;

  @NonNull
  public final TextView titleNumber;

  @NonNull
  public final TextView titleOctal;

  private ActivityNumericalSystemsNewBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView Title, @NonNull TextView Title2, @NonNull MaterialButton buttonBack,
      @NonNull TextInputEditText fieldNumber, @NonNull TextInputLayout fieldNumberLayout,
      @NonNull ConstraintLayout layoutBlock15, @NonNull ConstraintLayout layoutBlock2,
      @NonNull RadioGroup radioGroup, @NonNull RadioButton rbBinary, @NonNull RadioButton rbDecimal,
      @NonNull RadioButton rbHexadecimal, @NonNull RadioButton rbOctal,
      @NonNull TextView resultBinary, @NonNull TextView resultDecimal, @NonNull TextView resultHex,
      @NonNull TextView resultOctal, @NonNull TextView textTitle2, @NonNull TextView titleBinary,
      @NonNull TextView titleDecimal, @NonNull TextView titleHex, @NonNull TextView titleNumber,
      @NonNull TextView titleOctal) {
    this.rootView = rootView;
    this.Title = Title;
    this.Title2 = Title2;
    this.buttonBack = buttonBack;
    this.fieldNumber = fieldNumber;
    this.fieldNumberLayout = fieldNumberLayout;
    this.layoutBlock15 = layoutBlock15;
    this.layoutBlock2 = layoutBlock2;
    this.radioGroup = radioGroup;
    this.rbBinary = rbBinary;
    this.rbDecimal = rbDecimal;
    this.rbHexadecimal = rbHexadecimal;
    this.rbOctal = rbOctal;
    this.resultBinary = resultBinary;
    this.resultDecimal = resultDecimal;
    this.resultHex = resultHex;
    this.resultOctal = resultOctal;
    this.textTitle2 = textTitle2;
    this.titleBinary = titleBinary;
    this.titleDecimal = titleDecimal;
    this.titleHex = titleHex;
    this.titleNumber = titleNumber;
    this.titleOctal = titleOctal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNumericalSystemsNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNumericalSystemsNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_numerical_systems_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNumericalSystemsNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Title;
      TextView Title = rootView.findViewById(id);
      if (Title == null) {
        break missingId;
      }

      id = R.id.Title2;
      TextView Title2 = rootView.findViewById(id);
      if (Title2 == null) {
        break missingId;
      }

      id = R.id.button_back;
      MaterialButton buttonBack = rootView.findViewById(id);
      if (buttonBack == null) {
        break missingId;
      }

      id = R.id.field_number;
      TextInputEditText fieldNumber = rootView.findViewById(id);
      if (fieldNumber == null) {
        break missingId;
      }

      id = R.id.field_number_layout;
      TextInputLayout fieldNumberLayout = rootView.findViewById(id);
      if (fieldNumberLayout == null) {
        break missingId;
      }

      id = R.id.layoutBlock15;
      ConstraintLayout layoutBlock15 = rootView.findViewById(id);
      if (layoutBlock15 == null) {
        break missingId;
      }

      id = R.id.layoutBlock2;
      ConstraintLayout layoutBlock2 = rootView.findViewById(id);
      if (layoutBlock2 == null) {
        break missingId;
      }

      id = R.id.radioGroup;
      RadioGroup radioGroup = rootView.findViewById(id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.rb_binary;
      RadioButton rbBinary = rootView.findViewById(id);
      if (rbBinary == null) {
        break missingId;
      }

      id = R.id.rb_decimal;
      RadioButton rbDecimal = rootView.findViewById(id);
      if (rbDecimal == null) {
        break missingId;
      }

      id = R.id.rb_hexadecimal;
      RadioButton rbHexadecimal = rootView.findViewById(id);
      if (rbHexadecimal == null) {
        break missingId;
      }

      id = R.id.rb_octal;
      RadioButton rbOctal = rootView.findViewById(id);
      if (rbOctal == null) {
        break missingId;
      }

      id = R.id.resultBinary;
      TextView resultBinary = rootView.findViewById(id);
      if (resultBinary == null) {
        break missingId;
      }

      id = R.id.resultDecimal;
      TextView resultDecimal = rootView.findViewById(id);
      if (resultDecimal == null) {
        break missingId;
      }

      id = R.id.resultHex;
      TextView resultHex = rootView.findViewById(id);
      if (resultHex == null) {
        break missingId;
      }

      id = R.id.resultOctal;
      TextView resultOctal = rootView.findViewById(id);
      if (resultOctal == null) {
        break missingId;
      }

      id = R.id.textTitle2;
      TextView textTitle2 = rootView.findViewById(id);
      if (textTitle2 == null) {
        break missingId;
      }

      id = R.id.titleBinary;
      TextView titleBinary = rootView.findViewById(id);
      if (titleBinary == null) {
        break missingId;
      }

      id = R.id.titleDecimal;
      TextView titleDecimal = rootView.findViewById(id);
      if (titleDecimal == null) {
        break missingId;
      }

      id = R.id.titleHex;
      TextView titleHex = rootView.findViewById(id);
      if (titleHex == null) {
        break missingId;
      }

      id = R.id.title_number;
      TextView titleNumber = rootView.findViewById(id);
      if (titleNumber == null) {
        break missingId;
      }

      id = R.id.titleOctal;
      TextView titleOctal = rootView.findViewById(id);
      if (titleOctal == null) {
        break missingId;
      }

      return new ActivityNumericalSystemsNewBinding((ConstraintLayout) rootView, Title, Title2,
          buttonBack, fieldNumber, fieldNumberLayout, layoutBlock15, layoutBlock2, radioGroup,
          rbBinary, rbDecimal, rbHexadecimal, rbOctal, resultBinary, resultDecimal, resultHex,
          resultOctal, textTitle2, titleBinary, titleDecimal, titleHex, titleNumber, titleOctal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

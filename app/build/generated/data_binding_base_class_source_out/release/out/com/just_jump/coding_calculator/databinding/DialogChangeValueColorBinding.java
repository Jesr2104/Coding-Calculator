// Generated by view binder compiler. Do not edit!
package com.just_jump.coding_calculator.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.just_jump.coding_calculator.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogChangeValueColorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView TitleField;

  @NonNull
  public final ImageButton decrease;

  @NonNull
  public final TextInputLayout editText;

  @NonNull
  public final TextInputEditText editTextReal;

  @NonNull
  public final ImageButton increase;

  private DialogChangeValueColorBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView TitleField, @NonNull ImageButton decrease,
      @NonNull TextInputLayout editText, @NonNull TextInputEditText editTextReal,
      @NonNull ImageButton increase) {
    this.rootView = rootView;
    this.TitleField = TitleField;
    this.decrease = decrease;
    this.editText = editText;
    this.editTextReal = editTextReal;
    this.increase = increase;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogChangeValueColorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogChangeValueColorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_change_value_color, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogChangeValueColorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TitleField;
      TextView TitleField = rootView.findViewById(id);
      if (TitleField == null) {
        break missingId;
      }

      id = R.id.decrease;
      ImageButton decrease = rootView.findViewById(id);
      if (decrease == null) {
        break missingId;
      }

      id = R.id.editText;
      TextInputLayout editText = rootView.findViewById(id);
      if (editText == null) {
        break missingId;
      }

      id = R.id.editTextReal;
      TextInputEditText editTextReal = rootView.findViewById(id);
      if (editTextReal == null) {
        break missingId;
      }

      id = R.id.increase;
      ImageButton increase = rootView.findViewById(id);
      if (increase == null) {
        break missingId;
      }

      return new DialogChangeValueColorBinding((ConstraintLayout) rootView, TitleField, decrease,
          editText, editTextReal, increase);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
